name: Build PyTorch 2.3 for Jetson

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Enable QEMU emulation for ARM
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 3) Enable Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4) Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5) Log in to NVIDIA NGC so we can pull L4T base images
      - name: Login to NVIDIA NGC
        run: |
          echo "${{ secrets.NGC_API_KEY }}" \
            | docker login nvcr.io \
                --username "${{ secrets.NGC_USERNAME }}" \
                --password-stdin

      # 6) Build & push the ARM64 PyTorch image on JetPack base
      - name: Build and Push PyTorch on JetPack Base
        uses: docker/build-push-action@v4
        with:
          context: ./packages/pytorch
          file:    ./packages/pytorch/Dockerfile
          platforms: linux/arm64
          build-args: |
            BASE_IMAGE=nvcr.io/nvidia/l4t-jetpack:r36.4.0
            TORCH_CUDA_ARCH_LIST=8.7
          push:   true
          tags:   RuybeAI/pytorch:2.3-jp6.2-all

      # 7) (Optional) Build & push again on the L4T-PyTorch base
      - name: Build and Push PyTorch on L4T-PyTorch Base
        uses: docker/build-push-action@v4
        with:
          context: ./packages/pytorch
          file:    ./packages/pytorch/Dockerfile
          platforms: linux/arm64
          build-args: |
            BASE_IMAGE=nvcr.io/nvidia/l4t-pytorch:r36.4.3-pytorch-py3
            TORCH_CUDA_ARCH_LIST=8.7
          push:   true
          tags:   RuybeAI/pytorch:2.3-all
